@model QREST.Models.vmAdminTrainingStepEdit
@{
    ViewBag.Title = "Training Step Details";
}


<div class="row">

    @using (Html.BeginForm("TrainingLessonStep", "Admin", FormMethod.Post, new { @id = "norepostform", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.step.LESSON_STEP_IDX)
        @Html.HiddenFor(model => model.step.LESSON_IDX)

        <div class="col-md-6">
            <section class="panel panel-qrest">
                <header class="panel-heading font-bold">Lesson General Info</header>
                <div class="panel-body">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Step Description</label>
                                @Html.TextAreaFor(model => model.step.LESSON_STEP_DESC, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.step.LESSON_STEP_DESC)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Step Sequence in Lesson</label>
                                @Html.TextBoxFor(model => model.step.LESSON_STEP_SEQ, new { @class = "form-control cleave-num-no-comma", @maxlength = "2", @style = "max-width:125px" })
                                @Html.ValidationMessageFor(model => model.step.LESSON_STEP_SEQ)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Require trainee to click on a confirmation button after reading the description above</label>
                                @Html.CheckBox("step.REQ_CONFIRM", Model.step.REQ_CONFIRM ?? false, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.step.REQ_CONFIRM)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Require trainee to click on the following link</label>
                                @Html.TextBoxFor(model => model.step.REQUIRED_URL, new { @class = "form-control", @maxlength = "250" })
                                @Html.ValidationMessageFor(model => model.step.REQUIRED_URL)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Require trainee to watch the following Youtube video (only include string code e.g. NvMrCgjHzYA)</label>
                                @Html.TextBoxFor(model => model.step.REQUIRED_YT_VID, new { @class = "form-control", @maxlength = "250" })
                                @Html.ValidationMessageFor(model => model.step.REQUIRED_YT_VID)
                            </div>
                        </div>
                    </div>

                    <p>
                        <button id="btnSave" type="submit" disabled class="btn btn-primary">Save</button>
                        <a class="btn btn-default" href="@Url.Action("TrainingLesson", new { id = Model.step.LESSON_IDX })">Back to Lesson</a>
                    </p>
                </div>
            </section>
        </div>
    }


</div>

    @section scripts {
        @Scripts.Render("~/bundles/areyousure")
        @Scripts.Render("~/bundles/cleave")

        <script type="text/javascript">
            // Enable dirtyforms
            $('#norepostform').dirtyForms();
            // Enable/disable the submit button when the state transitions between dirty and clean.
            $('form').on('dirty.dirtyforms clean.dirtyforms', function (ev) {
                if (ev.type === 'dirty') {
                    $("#btnSave").prop("disabled", false);
                } else {
                    $("#btnSave").prop("disabled", true);
                }
            });

            $(document).ready(function () {

            });

        </script>
    }

