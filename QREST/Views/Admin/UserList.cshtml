@model QREST.Models.vmAdminUserList
@{
    ViewBag.Title = "Users";
    ViewBag.SubTitle = "Manage application users";
}

<section class="panel panel-qrest">
    <header class="panel-heading font-bold">
        Users
        <i class="fa fa-info-sign text-muted" data-toggle="tooltip" data-placement="bottom" data-title="ajax to load the data."></i>
    </header>
    <div class="panel-body">
        <form class="form-inline m-b-sm" onsubmit="return false">
            <div class="row">
                <div class="col-md-6 form-group">
                    <div class="col-sm-3">
                        <label class="control-label">
                            User Type:
                        </label>
                    </div>
                    <div class="col-sm-6 align-left">
                        <select name="usertype" id="usertype" class="form-control m-b" style="width:100%">
                            <option value="0">--Select All--</option>
                            <option value="1">Global Admin</option>
                            <option value="2">Tribal Amin</option>
                            <option value="3">Tribal QA</option>
                            <option value="4">Tribal Operator</option>
                        </select>
                    </div>
                    <div class="col-sm-3"><button id="btnGo" class="form-control btn btn-sm btn-primary">Go</button></div>
                </div>
            </div>
        </form>
        <div class="table-responsive">
            <table id="gridData" class="table table-striped table-bordered" data-ride="datatables" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th></th>
                        <th>User Name</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Created</th>
                        <th>Last Login</th>
                        <th>Status</th>
                        <th>Global Admin</th>
                        <th>Tribal Admin</th>
                        <th>Tribal QA</th>
                        <th>Tribal Operator</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="col-xs-3" style="margin-top:3px !important">
            <button id="btnSendMail" class="form-control btn btn-sm btn-primary">Email Users Above</button>
        </div>
    </div>
</section>
<section id="emailModal" class="panel panel-qrest modal fade"
         style="border-radius: 0px 4px 4px 0px;"
         data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <header class="panel-heading font-bold">Email</header>
            </div>
            <div class="modal-body">
                <div class="panel-body">
                    @using (Html.BeginForm("UserListData", "Admin", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.IsMailSendMode)
                        <div class="row">
                            <div class="col-md-9">
                                <div class="form-group">
                                    Email Subject:
                                    @Html.TextBoxFor(model => model.EmailSubject, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmailSubject)
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    Email Body
                                    @Html.EditorFor(model => model.emailBodyHtml, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.emailBodyHtml)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <button id="btnSave" type="button" onclick="SendMail(); return false;" class="btn btn-primary">Send Mail</button>
                                <button type="button" id="btnHideModal" class="btn btn-primary button button4">Hide</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">


            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/datatables")
    @Scripts.Render("~/bundles/confirm-delete")

    <script type="text/javascript">
        var table;
        $(document).ready(function () {

            moment.updateLocale(moment.locale(), { invalidDate: "" });

            // datatable initialization
            table = $("#gridData").DataTable({
                "responsive": true,
                "serverSide": true,
                "processing": true,
                "orderMulti": false,
                "paging": true,
                "pageLength": 25,
                "pagingType": "full_numbers",
                "info": false,
                "searching": false,
                "ajax": {
                    "url": "@Url.Action("UserListData", "Admin")",
                    "type": "POST",
                    "datatype": "json",
                    "dataFilter": function (data) {
                        var json = jQuery.parseJSON(data);
                        json.recordsTotal = json.recordsFiltered;
                        json.recordsFiltered = json.recordsTotal;
                        json.data = json.data;
                        if (json.mailSendMode == "1") {
                            if (json.mailSendStatus == true) {
                                toastr.success("Email successfully sent to users.");
                            } else {
                                toastr.error("Sorry, there was some error sending Email.");
                            }
                        };
                        return JSON.stringify(json); // return JSON string
                    },
                    "data": function (d) {
                        return $.extend({}, d, {
                            "usertype": $('#usertype').val(),
                            "mailsendmode": $("#IsMailSendMode").val(),
                            "mailsubject": encodeURIComponent($("#EmailSubject").val()),
                            "mailbody": encodeURIComponent(tinyMCE.activeEditor.getContent())
                        });
                    }
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": false,
                    },
                    {
                        "targets": [1],
                        "orderable" : false
                        },
                    ],
                "columns": [
                    { "data": "USER_IDX", "name": "USER_IDX", "autoWidth": true },
                    {
                        "render": function (data, type, row) {
                            var myUrl = "@(Url.Action("UserEdit","Admin"))" + "/" + row.USER_IDX;
                            return '<a href="' + myUrl + '" class="btn btn-rounded btn-xs btn-primary" style="display: inline-block;"> <i class="fa fa-pencil"></i> Edit</a>'
                                                            + '<div class="delete-section" style="display:inline-block;"><a class="btn btn-rounded btn-xs btn-danger delete-link"><i class="fa fa-times"></i></a><div class="btn btn-rounded btn-xs btn-warning delete-confirm" style="display:none" data-delete-id="'
                                                            + row.USER_IDX + '" data-delete-path="@(Url.Content("~/"))" data-delete-p="/Admin/UserDelete"><b>Confirm Delete</b></div></div>';
                        }
                    },
                    { "data": "EMAIL", "name": "EMAIL", "autoWidth": true },
                    { "data": "FNAME", "name": "FNAME", "autoWidth": true },
                    { "data": "LNAME", "name": "LNAME", "autoWidth": true },
                    {
                        "data": "CREATE_DT",
                        "name": "CREATE_DT",
                        "autoWidth": true,
                        render: function (d) {
                            return moment(d).format("MM/DD/YYYY hh:mm A");
                        }
                    },
                    {
                        "data": "LAST_LOGIN_DT",
                        "name": "LAST_LOGIN_DT",
                        "autoWidth": true,
                        render: function (d) {
                            return moment(d).format("MM/DD/YYYY hh:mm A");
                        }
                    },
                    {
                        "render": function (data, type, row) {
                            var xxx = '<span class="label label-success"> Active</span>';
                            if (row.LockoutEnd != null) {
                                xxx = '<span class="label label-warning"> Locked Out</span>';
                            }
                            else {
                                if (row.EmailConfirmed == false) {
                                    xxx = '<span class="label label-warning"> Awaiting Email Confirmation</span>';
                                }
                            }
                            return xxx;
                        }
                    },
                    {
                        "data": "ISGLOBALADMIN",
                        "name": "ISGLOBALADMIN",
                        "autoWidth": true,
                        "render": function (d) {
                            return d == true ? '<span class="label label-success"> Yes</span>' : '<span class="label label-warning"> No</span>';
                        }
                    },
                    {
                        "data": "IS_TRIBAL_ADMIN",
                        "name": "IS_TRIBAL_ADMIN",
                        "autoWidth": true,
                        "render": function (d) {
                            return d == true ? '<span class="label label-success"> Yes</span>' : '<span class="label label-warning"> No</span>';
                        }
                    },
                    {
                        "data": "IS_TRIBAL_QA",
                        "name": "IS_TRIBAL_QA",
                        "autoWidth": true,
                        "render": function (d) {
                            return d == true ? '<span class="label label-success"> Yes</span>' : '<span class="label label-warning"> No</span>';
                        }
                    },
                    {
                        "data": "IS_TRIBAL_OPERATOR",
                        "name": "IS_TRIBAL_OPERATOR",
                        "autoWidth": true,
                        "render": function (d) {
                            return d == true ? '<span class="label label-success"> Yes</span>' : '<span class="label label-warning"> No</span>';
                        }
                    }
                ],
                "createdRow": function (row, data, dataIndex) {
                    $('td:eq(0)', row).css('width', '90px');
                    $('td:eq(0)', row).css('min-width', '90px');
                    $('td:eq(0)', row).css('padding-right', '0px');
                    $('td:eq(0)', row).css('white-space', 'nowrap');
                },
                fnDrawCallback: function (oSettings) {
                    var totalPages = this.api().page.info().pages;
                    if (totalPages == 1) {
                        jQuery('.dataTables_paginate').hide();
                    }
                    else {
                        jQuery('.dataTables_paginate').show();
                    }
                    $("#IsMailSendMode").val("0");
                }
            });

            //user type filter click
            $('#btnGo').on('click', function () {
                table.draw();
            })
            $("#btnSendMail").click(function () {
                $("#emailModal").modal('show');
            });

            $("#btnHideModal").click(function () {
                $("#emailModal").modal('hide');
            });
        });

        function SendMail() {
            $("#emailModal").modal('hide');
            $("#IsMailSendMode").val("1");
            table.draw();
        }
    </script>
}
