@using QREST.App_Logic.BusinessLogicLayer
@model QREST.Models.vmAdminOrgEdit
@{
    if (Model.ORG_ID == null)
    {
        ViewBag.Title = "Add Organization";
    }
    else
    {
        ViewBag.Title = "Edit Organization";
    }

    ViewBag.HelpLink = "Organization-Management";
}

<section class="panel panel-qrest">
    <header class="panel-heading font-bold">Organization Details</header>
    <div class="panel-body">
        @using (Html.BeginForm("OrgEdit", "Admin", FormMethod.Post, new { @id = "norepostform", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })

            if (Model != null)
            {
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelForRequired(m => m.ORG_ID, "Org ID", new { @class = "control-label" })
                            @if (Model.ORG_ID != null)
                            {
                                @Html.TextBoxFor(model => model.ORG_ID, new { @class = "form-control", @readonly = "readonly" })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.ORG_ID, new { @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.ORG_ID)
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="form-group">
                            @Html.LabelForRequired(m => m.ORG_NAME, "Org Name", new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.ORG_NAME, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ORG_NAME)
                        </div>
                    </div>
                </div>
            }

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>State</label>
                        @Html.DropDownListFor(model => model.STATE_CD, Model.ddl_State, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.STATE_CD)
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>EPA Region</label>
                        @Html.DropDownListFor(model => model.EPA_REGION, Model.ddl_Region, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EPA_REGION)
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>AQS Agency Code</label>
                        @Html.DropDownListFor(model => model.AQS_AGENCY_CODE, Model.ddl_AqsAgency, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AQS_AGENCY_CODE)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.CheckBoxFor(model => model.SELF_REG_IND, new { @class = "checkbox-inline checkbox-lg" })
                        <label class="label-lg font-bold">Allow Self Registration</label>
                        @Html.ValidationMessageFor(model => model.SELF_REG_IND)
                    </div>
                </div>
            </div>
            <p>
                <button id="btnSave" type="submit" disabled class="btn btn-sm btn-primary">Save</button>
                <a class=" btn btn-sm btn-default" href="@Url.Action("OrgList" )">Back to List</a>
            </p>
        }
    </div>
</section>

@if (Model.org_users != null)
{
    <div class="row">
        <!-- start: USER ORG ASSIGNMENT -->
        <div class="col-md-6">
            <section class="panel panel-qrest">
                <div class="panel-heading font-bold">Organization Users</div>
                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered" data-ride="datatables">
                            <thead>
                                <tr>
                                    @if (Model.LOCK_ACCESS_IND == false)
                                    {
                                        <th style="min-width: 70px;">Edit</th>
                                    }
                                    <th>User</th>
                                    <th>Access Level</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            @foreach (var item in Model.org_users)
                            {
                                <tr>
                                    @if (Model.LOCK_ACCESS_IND == false)
                                    {
                                        <td>
                                            <a href="#modal-form" class="btn btn-rounded btn-xs btn-primary modal-it" data-toggle="modal" data-userid="@item.USER_IDX" data-orgid="@item.ORG_ID" data-accesslevel="@item.ACCESS_LEVEL" data-status="@item.STATUS_IND"><i class="fa fa-pencil"></i> Edit</a>
                                            <div class="delete-section" style="display:inline-block">
                                                <a class=" btn btn-rounded btn-xs btn-danger delete-link"><i class="fa fa-times"></i></a>
                                                <div class="btn btn-rounded btn-xs btn-warning delete-confirm" style="display:none" data-delete-id="@item.ORG_USER_IDX" data-delete-p="/Admin/UserOrgDelete"><b>Confirm Delete</b></div>
                                            </div>
                                            @Html.HiddenFor(modelItem => item.ORG_USER_IDX)
                                            @Html.HiddenFor(modelItem => item.USER_IDX)
                                        </td>
                                    }
                                    <td>@Html.DisplayFor(modelItem => item.USER_NAME)</td>
                                    <td>
                                        <span class="badge label-@(item.ACCESS_LEVEL)">@Html.DisplayFor(modelItem => item.ACCESS_LEVEL_DESC)</span>
                                    </td>
                                    <td>
                                        <span class="badge label-@(item.STATUS_IND)">@Html.DisplayFor(modelItem => item.STATUS_IND_DESC)</span>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                    @if (Model.LOCK_ACCESS_IND == false)
                    {
                        <div class="m-t-sm">
                            <a id="add-it" href="#modal-form" data-toggle="modal" class="btn btn-sm btn-primary modal-it"><i class="fa fa-plus"></i> Add User</a>
                        </div>
                    }
                </div>
            </section>
        </div>
        <!-- end: USER ROLE ASSIGNMENT -->

        @if (Model.LOCK_ACCESS_IND == false)
        {
            <!-- start: ORG EMAIL RULES -->
            <div class="col-md-6">
                <section class="panel panel-qrest">
                    <div class="panel-heading font-bold">User Registration Email Rules</div>
                    <div class="panel-body">
                        <div class="alert alert-info">
                            <i class="fa fa-info-sign"></i>
                            Only allow individuals with certain email domains to register QREST accounts for your organization. If this is left blank, then users with any email domains can register accounts for this organization.
                        </div>
                        @if (Model.org_emails != null)
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered" data-ride="datatables">
                                    <thead>
                                        <tr>
                                            <th style="min-width: 70px;">Edit</th>
                                            <th>Email Rule</th>
                                        </tr>
                                    </thead>
                                    @foreach (var item in Model.org_emails)
                                    {
                                        <tr>
                                            <td>
                                                <div class="delete-section" style="display:inline-block">
                                                    <a class=" btn btn-rounded btn-xs btn-danger delete-link"><i class="fa fa-times"></i></a>
                                                    <div class="btn btn-rounded btn-xs btn-warning delete-confirm" style="display:none" data-delete-id="@item.ORG_ID" data-delete-id2="@item.EMAIL_STRING" data-delete-p="/Admin/OrgEmailDelete"><b>Confirm Delete</b></div>
                                                </div>
                                            </td>
                                            <td>@Html.DisplayFor(modelItem => item.EMAIL_STRING)</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        }
                        <div class="m-t-sm">
                            <a id="add-it-email" href="#modal-form-email" data-toggle="modal" class="btn btn-sm btn-primary modal-it-email"><i class="fa fa-plus"></i> Add Email Rule</a>
                        </div>
                    </div>
                </section>
            </div>
        }
        <!-- end: ORG EMAIL RULES -->
    </div>
}



<!-- START MODAL FORM  -->
<div class="modal fade" id="modal-form" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        @using (Html.BeginForm("OrgEditUser", "Admin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.edit_org_id)
            @Html.HiddenFor(model => model.edit_typ)

            <div class="modal-content">
                <div class="modal-header">
                    <h4 style="float: left" class="modal-title">Organization User</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>User</label>
                                @Html.DropDownListFor(model => model.edit_user_idx, Model.ddl_User, "", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Access Level</label>
                                @Html.DropDownListFor(model => model.edit_org_user_access_level, Model.ddl_user_role, "", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Status</label>
                                @Html.DropDownListFor(model => model.edit_org_user_status, Model.ddl_user_status, "", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSave" type="submit" class="btn btn-primary">Save</button>
                    <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        }
    </div>
</div>
<!-- END MODAL FORM -->
<!-- START MODAL EMAIL FORM  -->
<div class="modal fade" id="modal-form-email" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        @using (Html.BeginForm("OrgEditEmail", "Admin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.edit_org_id)

            <div class="modal-content">
                <div class="modal-header">
                    <h4 style="float: left" class="modal-title">Add Email Rule</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <span class="float-left">(For example if email is JohnDoe@abc.com, email rule will be abc.com)</span>
                    <br />
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Email Rule</label>
                                @Html.TextBoxFor(model => model.edit_email_rule, new { @class = "form-control", @maxlength = "100" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSave" type="submit" class="btn btn-primary">Save</button>
                    <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        }
    </div>
</div>
<!-- END MODAL EMAIL FORM -->

@Html.Partial("_PleaseWait", "Shared")

@section Scripts {
    @Scripts.Render("~/bundles/confirm-delete")
    @Scripts.Render("~/bundles/areyousure")

    <script type="text/javascript">
        // Enable dirtyforms
        $('#norepostform').dirtyForms();
        // Enable/disable the submit button when the state transitions between dirty and clean.
        $('form').on('dirty.dirtyforms clean.dirtyforms', function (ev) {
            if (ev.type === 'dirty') {
                $("#btnSave").prop("disabled", false);
            } else {
                $("#btnSave").prop("disabled", true);
            }
        });


        $(document).ready(function () {
            //create an event when button is clicked to display modal
            $(".modal-it").click(function () {
                $('#edit_user_idx').val($(this).data('userid'));
                $('#edit_org_user_access_level').val($(this).data('accesslevel'));
                $('#edit_org_user_status').val($(this).data('status'));
            });

            //create an event when button is clicked to display modal
            $(".modal-it-email").click(function () {
                $('#edit_user_idx').val($(this).data('userid'));
                $('#edit_org_user_access_level').val($(this).data('accesslevel'));
                $('#edit_org_user_status').val($(this).data('status'));
            });

        });
    </script>
}
