@model QREST.Models.vmReportsDaily
@{
    ViewBag.Title = "Daily Averages";
    ViewBag.HideTitle = true;
    ViewBag.HelpLink = "Daily";
}
<style>
    .daterangepicker.monthly .drp-calendar,
    .daterangepicker.yearly .drp-calendar {
        width: 1000px !important;
    }

</style>
<section class="panel panel-qrest">
    <header class="panel-heading font-bold">Daily Averages</header>
    @if (Model.ddl_Organization.Any())
    {
        <div class="panel-body">
            @using (Html.BeginForm("Daily", "Reports", FormMethod.Post, new { @class = "form-inline m-b-sm" }))
            {
                @Html.AntiForgeryToken()
                @Html.DropDownListFor(model => model.selOrgID, Model.ddl_Organization, new { @class = "form-control" })
                @Html.DropDownListFor(model => model.selMon, Model.ddl_Monitor, new { @class = "form-control" })
                @Html.TextBoxFor(model => model.selDate, new { @data_start="", @data_end="", @class = "form-control", @style ="width:300px"  })
                @Html.DropDownListFor(model => model.selTimeType, Model.ddl_TimeType, new { @class = "form-control" })

                <button id="btnGo" type="submit" class="btn btn-primary">Go</button>
            }

            @if (Model.stats != null && Model.stats.Count > 0)
            {
                <div id="chartContainer" class="collapse in" style="height: 400px; width: 100%;">
                </div>
                <div id="gridContainer" class="table-responsive collapse in">
                    <table id="gridData" class="table table-striped table-bordered" data-ride="datatables" style="width:100%">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Average</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.stats)
                            {
                                <tr>
                                    <td>
                                        @item.DT.GetValueOrDefault().ToShortDateString()
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.avg1)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

            }
        </div>
    }
    else
    {
        <div class="panel-body">You can view data after you have been associated with a tribal organization.</div>
    }
</section>


@section Scripts {
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/canvasjs")
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <script type="text/javascript">

        $(document).ready(function () {

            moment.updateLocale(moment.locale(), { invalidDate: "" });

            //set proper dates in datetime combo
            var sDt = moment().startOf('day');
            var eDt = moment().endOf('day');
            if ($("#selDate").val().length > 0) {
                var xxx = $("#selDate").val().split(' - ');
                if (xxx.length == 2) {
                    sDt = xxx[0];
                    eDt = xxx[1];
                }
            }

            //daterange selector initialization
            $('input[name="selDate"]').daterangepicker({
                autoUpdateInput: true,
                startDate: sDt,
                endDate: eDt,
                ranges: {
                    'Last 7 Days': [moment().subtract(6, 'days').startOf('day'), moment().endOf('day')],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                locale: {
                    format: 'M/DD/YYYY'
                }
            }
            , function (start, end, label) {
                //callback, gets fired when date range is selected, setting values to viewmodel
                $('#selDate').data('start', start.format('YYYY-MM-DD'));
                $('#selDate').data('end', end.format('YYYY-MM-DD'));
            });


            //initialize monitor dropdown on page load (if none supplied by controller)
            if ($('#selMon option').length === 0) {
                fetchMonitors();
            }

            //update monitor dropdown on sel org change
            $('#selOrgID').change(function () {
                fetchMonitors();
            });

            //update monitor dropdown
            function fetchMonitors() {
                $('#selMon').empty();
                $.getJSON('@Url.Action("FetchMonitorsWithData", "Data" )', { ID: $("#selOrgID").val() }, function (data) {
                    if (!data) { return; }
                    $('#selMon').append($('<option></option>').val('').text('Please select'));
                    $.each(data, function (index, item) {
                        $('#selMon').append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            };


            var dataPointsA = [];
            var chart;

            @if (Model.stats != null && Model.stats.Count > 0)
            {
                foreach (var item in Model.stats)
                {
                    <text>
            dataPointsA.push({
                x: new Date('@item.DT'),
                y: Number('@item.avg1'),
                lineColor: "#67B347",
                color: "#67B347"
            });
            </text>
                }
            }

            //hide chart if no data
            if (dataPointsA.length > 0) {
                chart = new CanvasJS.Chart("chartContainer", {
                    animationEnabled: true,
                    exportEnabled: true,
                    title: {
                        text: "Daily Averages"
                    },
                    axisY: {
                        includeZero: false //try changing it to true
                    },
                    data: [{
                        type: "column",
                        dataPoints: dataPointsA,
                        xValueType: "dateTime"

                    }]
                });

                chart.render();

                $("#chartContainer").show();
                $("#chartContainer").css("height", "400px");
            }
            else
                $("#chartContainer").hide();

        });

    </script>
}