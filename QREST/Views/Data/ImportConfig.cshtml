@using QREST.App_Logic.BusinessLogicLayer
@model QREST.Models.vmDataImportConfig
@{
    ViewBag.Title = "Manual Import Config";
    ViewBag.HelpLink = "Manual-Import";
}

@if (Model.editPOLL_CONFIG_IDX != null)
{
    <section class="panel panel-qrest" style="border-radius: 0px 4px 4px 0px;">
        <header class="panel-heading font-bold">
            Details
            <button type="button" class="btn btn-xs btn-info pull-right dropdown-toggle" data-toggle="dropdown">Options <i class="caret"></i></button>
            <ul class="dropdown-menu pull-right btn-info">
                <li data-value="2">
                    <a id="lnkDownload" href="@Url.Action("DownloadTemplate", new { id=Model.editPOLL_CONFIG_IDX })">Download File Template</a>
                </li>
                <li class="divider"></li>
                <li data-value="4">
                    <a href="#" class="delete-link">Delete</a>
                    <a href="#" class="delete-confirm" style="display:none" data-delete-id="@Model.editPOLL_CONFIG_IDX" data-delete-path="" data-delete-p="/Data/ImportConfigDelete" data-success-url="/Data/ManualImport">
                        <b>Confirm Delete</b>
                    </a>
                </li>
            </ul>
        </header>
        <div class="panel-body">

            @using (Html.BeginForm("ImportConfig", "Data", FormMethod.Post, new { @id = "norepostform", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.editPOLL_CONFIG_IDX)
                @Html.HiddenFor(model => model.SITE_IDX)
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelForRequired(m => m.editCONFIG_NAME, "Config Name", new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.editCONFIG_NAME, new { @class = "form-control", @maxlength = "40" })
                                    @Html.ValidationMessageFor(model => model.editCONFIG_NAME)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    Description / Notes
                                    @Html.TextAreaFor(model => model.editCONFIG_DESC, new { @class = "form-control", @maxlength = "200" })
                                    @Html.ValidationMessageFor(model => model.editCONFIG_DESC)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    Delimiter
                                    @Html.DropDownListFor(model => model.editDELIMITER, Model.ddl_LoggerDelimiter, "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.editDELIMITER)
                                    <span class="help-block">How columns of data are separated in the import data file</span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    Local Time Zone
                                    @Html.DropDownListFor(model => model.LOCAL_TIMEZONE, Model.ddl_TimeZone, "", new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.LOCAL_TIMEZONE)
                                    <span class="help-block">Site's local time zone (set at site page)</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    Date/Time Output Type
                                    @Html.DropDownListFor(model => model.editTIME_POLL_TYPE, Model.ddl_LoggerTimeType, "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.editTIME_POLL_TYPE)
                                    <span class="help-block">How is date/time output on the data file?</span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    Date Column
                                    @Html.TextBoxFor(model => model.editDATE_COL, new { @class = "form-control cleave-num", @maxlength = "2" })
                                    @Html.ValidationMessageFor(model => model.editDATE_COL)
                                    <span class="help-block">Column number in which date is stored.</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    Date Format
                                    @Html.DropDownListFor(model => model.editDATE_FORMAT, Model.ddl_LoggerDate, "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.editDATE_FORMAT)
                                    <span class="help-block">Format of DATE field on data logger file.</span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    Time in Separate Column?
                                    <input type="checkbox" id="chkDateTimeSame" name="chkDateTimeSameName" class="form-control">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    Time Column
                                    @Html.TextBoxFor(model => model.editTIME_COL, new { @class = "form-control cleave-num", @maxlength = "2" })
                                    @Html.ValidationMessageFor(model => model.editTIME_COL)
                                    <span class="help-block">Col # in which time is stored.</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    Time Format
                                    @Html.DropDownListFor(model => model.editTIME_FORMAT, Model.ddl_LoggerTime, "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.editTIME_FORMAT)
                                    <span class="help-block">Format of TIME field on data logger file.</span>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-md-6">
                        <h4 style="margin-top:0">Parameter Column Mapping</h4>
                        <div class="table-responsive">
                            <div class="table-responsive">
                                <table id="gridData" class="table table-striped table-bordered" data-ride="datatables" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Column</th>
                                            <th>Parameter / Method</th>
                                            <th>Sum</th>
                                            <th>Prec</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                        <a type="button" id="add-it" href="#modal-form" data-toggle="modal" class="add-it btn btn-sm btn-primary modal-it m-t-sm"><i class="fa fa-plus"></i> Add</a>
                    </div>
                </div>



                <div class="row">
                    <div class="col-md-12">
                        <button id="btnSave" type="submit" disabled class="btn btn-primary">Save</button>
                        <a class=" btn btn-default" href="@Url.Action("ManualImport", new { configid = Model.editPOLL_CONFIG_IDX })">Back to Import Screen</a>
                    </div>
                </div>
            }
        </div>
    </section>
}


<!-- START MODAL FORM  -->
<form class="modal fade" id="modal-form" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 style="float: left" class="modal-title">Edit Setting</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            @Html.HiddenFor(model => model.editPOLL_CONFIG_DTL_IDX)
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Monitor <span class="required" style="color:#ac2925;"> <span style="vertical-align: super;" class="fa fa-asterisk" data-unicode="270f"></span></span></label>
                            @Html.DropDownListFor(model => model.editMONITOR_IDX, Model.ddl_Monitors, "", new { @class = "form-control required" })
                            <span class="field-validation-valid" data-valmsg-for="editMONITOR_IDX" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Column <span class="required" style="color:#ac2925;"> <span style="vertical-align: super;" class="fa fa-asterisk" data-unicode="270f"></span></span></label>
                            @Html.TextBoxFor(model => model.editCOL, new { @class = "form-control", @maxlength = "2" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Summary Type</label>
                            @Html.DropDownListFor(model => model.editSUM_TYPE, Model.ddl_SumType, "", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Rounding Decimals</label>
                            @Html.DropDownListFor(model => model.editROUNDING, Model.ddl_Rounding, "", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-xs btn-warning btn-rounded m-l-xs" data-toggle="collapse" data-target="#advanced">Advanced Options</button>
                <div id="advanced" class="row collapse">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Adjustment Factor</label>
                            @Html.TextBoxFor(model => model.editADJUST_FACTOR, new { @class = "form-control", @maxlength = "10" })
                            <span class="help-block">Imported values will be multiplied by this value (leave this blank to not use).</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSaveDtl" type="submit" class="btn btn-primary">Save</button>
                <button class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</form>
<!-- END MODAL FORM -->

@Html.Partial("_PleaseWait", "Shared")
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/confirm-delete")
    @Scripts.Render("~/bundles/datatables")
    @Scripts.Render("~/bundles/areyousure")

    <script type="text/javascript">
        // Enable dirtyforms
        $('#norepostform').dirtyForms();
        // Enable/disable the submit button when the state transitions between dirty and clean.
        $('form').on('dirty.dirtyforms clean.dirtyforms', function (ev) {
            if (ev.type === 'dirty') {
                $("#btnSave").prop("disabled", false);
                $(".delete-section").hide();
                $(".modal-it").hide();
                $("#gridData").css({"z-index":2,"opacity":.5});
            } else {
                $("#btnSave").prop("disabled", true);
                $(".delete-section").show();
                $(".modal-it").show();
                $("#gridData").css({"z-index":2,"opacity":1});
            }
        });

        $(document).ready(function () {

            // datatable initialization
            $("#gridData").DataTable({
                "responsive": true,
                "serverSide": true,
                "processing": true,
                "orderMulti": false,
                "lengthChange": false,
                "paging": false,
                "info": false,
                "searching": false,
                "ajax": {
                    "url": "@Url.Action("SitePollConfigDtlData", "Site")",
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) {
                        return $.extend({}, d, {
                            "pollid": $('#editPOLL_CONFIG_IDX').val()
                        });
                    }
                },
                "columns": [
                    {
                        "render": function (data, type, row) {
                            var txt = '<a href="#modal-form" data-toggle="modal" data-id=' + row.POLL_CONFIG_DTL_IDX + ' data-col=' + row.COL + ' data-sum="' + row.SUM_TYPE + '" data-monid="' + row.MONITOR_IDX + '" data-rounding=' + row.ROUNDING + ' data-adjust=' + row.ADJUST_FACTOR + ' class="btn btn-rounded btn-xs btn-primary modal-it" style="display: inline-block;"> <i class="fa fa-pencil"></i> Edit</a>';
                            var txt2 = '<div class="delete-section" style="display:inline-block;"><a class="btn btn-rounded btn-xs btn-danger delete-link"><i class="fa fa-times"></i></a><div class="btn btn-rounded btn-xs btn-warning delete-confirm" style="display:none" data-delete-id="' + row.POLL_CONFIG_DTL_IDX + '" data-delete-p="/Data/SitePollConfigDtlDelete"><b>Confirm Delete</b></div></div>';
                            return txt + txt2;
                        }
                    },
                    { "data": "COL", "name": "COL", "autoWidth": true },
                    {
                        "data": function (data, type) {
                            return data.PAR_CODE + " - " + data.PAR_NAME + "<br/>Method: " + data.METHOD_CODE + "<br/>POC: " + data.POC + "  Unit: " + (data.COLLECT_UNIT_CODE == null ? "<span style='color:red'>MISSING</span>" : data.COLLECT_UNIT_CODE);
                        }, "name": "POC", "autoWidth": true
                    },
                    { "data": "SUM_TYPE", "name": "SUM_TYPE", "autoWidth": true },
                    {
                        "data": function (data, type) {
                            return data.ROUNDING + (data.ADJUST_FACTOR != null ? "<br/>Adjust Factor: " + data.ADJUST_FACTOR : "")
                        }, "name": "ROUNDING", "autoWidth": true
                    }
                ],
                "createdRow": function (row, data, dataIndex) {
                    $('td:eq(0)', row).css('width', '90px');
                    $('td:eq(0)', row).css('min-width', '90px');
                    $('td:eq(0)', row).css('padding-right', '0px');
                    $('td:eq(0)', row).css('white-space', 'nowrap');
                }
            });


            //******************load column config modal*******************
            $(document).on('click', '.modal-it', function () {
                $("#editPOLL_CONFIG_DTL_IDX").val($(this).attr('data-id'));
                $("#editCOL").val($(this).attr('data-col'));
                $("#editSUM_TYPE").val($(this).attr('data-sum'));
                $("#editROUNDING").val($(this).attr('data-rounding'));
                $("#editMONITOR_IDX").val($(this).attr('data-monid'));
                if ($(this).attr('data-adjust'))
                    $("#editADJUST_FACTOR").val(($(this).attr('data-adjust')).replace('null', ''));
                else
                    $("#editADJUST_FACTOR").val('');
            });

            //******************datetime same col*******************
            $('#chkDateTimeSame').prop('checked', $('#editDATE_COL').val() !== $('#editTIME_COL').val());   //init val on page load
            $('#editTIME_COL').attr('readonly', $('#editDATE_COL').val() === $('#editTIME_COL').val());

            $('#chkDateTimeSame').on('click', function () {
                if (this.checked) {
                    $('#editTIME_COL').attr('readonly', false);
                } else {
                    $('#editTIME_COL').val($('#editDATE_COL').val());
                    $('#norepostform').data("dirty", true);
                    $("#norepostform").find("input").change();
                    $('#editTIME_COL').attr('readonly', true);
                }
            });

            $("#editDATE_COL").keyup(function () {
                if ($('#chkDateTimeSame').is(":checked") == false) {
                    $("#editTIME_COL").val($(this).val());
                }
            });

            //******************submit modal*******************
            $("#modal-form").submit(function (e) {
                e.preventDefault();

                $.post('@Url.Action("SitePollConfigDtlEdit","Site")',
                    AddAntiForgeryToken({
                        configid: $("#editPOLL_CONFIG_IDX").val(),
                        configdtlid: $("#editPOLL_CONFIG_DTL_IDX").val(),
                        monid: $("#editMONITOR_IDX").val(),
                        col: $("#editCOL").val(),
                        sumtype: $("#editSUM_TYPE").val(),
                        rounding: $("#editROUNDING").val(),
                        adjustfactor: $("#editADJUST_FACTOR").val()
                    }))
                    .done(function (response) {
                        if (response.msg == "Success") {
                            toastr.success("Updated");
                            $('#modal-form').modal('toggle');
                            $('#gridData').DataTable().ajax.reload();
                        }
                        else
                            toastr.warning(response.msg);
                    }).fail(function (data) {
                        toastr.warning("Unable to save data");
                    });
            });

        });


        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        };

    </script>

}