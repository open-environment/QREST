@model QREST.Models.vmDataRaw
@{
    ViewBag.Title = "Raw Data";
    ViewBag.HideTitle = true;
}

<section class="panel panel-qrest">
    <header class="panel-heading font-bold">Raw Data</header>
    @if (Model.ddl_Organization.Count() > 0)
    {
        <div class="panel-body">
            @using (Html.BeginForm("Raw", "Data", FormMethod.Post, new { @class = "form-inline m-b-sm" }))
            { 
                @Html.DropDownListFor(model => model.selOrgID, Model.ddl_Organization, new { @class = "form-control" })
                @Html.DropDownListFor(model => model.selMon, Model.ddl_Monitor, new { @class = "form-control" })
                @Html.DropDownListFor(model => model.selType, Model.ddl_DurationType, new { @class = "form-control" })
                @Html.DropDownListFor(model => model.selTimeType, Model.ddl_TimeType, new { @class = "form-control" })
                @Html.TextBoxFor(model => model.selDate, new { @data_start="", @data_end="", @class = "form-control", @style ="width:300px"  })
                <button id="btnGo" type="submit" class="btn btn-primary">Go</button>

                <div class="btn-group pull-right" data-toggle="buttons">
                    <label id="btnChartToggle" class="btn btn-default btn-rounded active" data-target="#chartContainer" data-toggle="collapse">
                        <input type="checkbox" name="option1" id="option1"><i class="fa fa-check text-active"></i> <span><i class="fa fa-line-chart"></i></span>
                    </label>
                    <label class="btn btn-default btn-rounded active" data-target="#gridContainer" data-toggle="collapse">
                        <input type="checkbox" name="option2" id="option2"><i class="fa fa-check text-active"></i> <span><i class="fa fa-table"></i></span>
                    </label>
                </div>
                }
            
            @if (Model.RawData != null)
            {
            <div id="chartContainer" class="collapse in" style="height: 400px; width: 100%;" >
            </div>

            <div id="gridContainer" class="table-responsive collapse in">
                <table id="gridData" class="table table-striped table-bordered" data-ride="datatables" style="width:100%">
                    <thead>
                        <tr>
                            <th>Site</th>
                            <th>Par Code</th>
                            <th>Parameter</th>
                            <th>POC</th>
                            <th>Date/Time</th>
                            <th>Value</th>
                            <th>Flagged</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.RawData)
                        {
                            <tr data-date="@Html.DisplayFor(modelItem => item.DATA_DTTM)">
                                <td>
                                    @Html.DisplayFor(modelItem => item.SITE_ID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PAR_CODE)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PAR_NAME)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.POC)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DATA_DTTM)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DATA_VALUE)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.VAL_CD)
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>


            </div>
            }
        </div>
    }
    else
    {
        <div class="panel-body">You can view data after you have been associated with a tribal organization.</div>
    }
</section>


@section Scripts {
    @Scripts.Render("~/bundles/datatables")
    @Scripts.Render("~/bundles/canvasjs")

    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <script type="text/javascript">
        $(document).ready(function () {

            moment.updateLocale(moment.locale(), { invalidDate: "" });

            $('#gridData').DataTable({
                "scrollY": "400px",
                "scrollCollapse": true,
                "paging": false,
                "searching": false,
            });

            var dataPointsA = [];
            var parName;
            var chart;

            @if (Model.RawData != null && Model.RawData.Count > 0)
            {
                <text>parName = '@Model.RawData[0].PAR_NAME (' + '@Model.RawData[0].UNIT_DESC' + ')'</text>
                foreach (var item in Model.RawData)
                {
                    <text>addPoint('@item.DATA_DTTM', '@item.DATA_VALUE', '@item.VAL_CD', dataPointsA);</text>
                }
            }

            function addPoint(xx, yy, zz, array) {
                var lcolor = "#67B347";
                if (yy == "FEW")
                    lcolor = "#ffee8c";
                else if (zz == "MIN")
                    lcolor = "#d32d41";
                else if (zz == "MAX")
                    lcolor = "#d32d41";
                else if (zz == "JUMP")
                    lcolor = "#6F2DA7";

                array.push({
                    x: new Date(xx),
                    y: yy == "FEW" ? 0 : Number(yy),
                    lineColor: lcolor,
                    color: lcolor
                });
            }

            //set proper dates in datetime combo
            var sDt = moment().startOf('day');
            var eDt = moment().endOf('day');
            if ($("#selDate").val().length > 0) {
                var xxx = $("#selDate").val().split(' - ');
                if (xxx.length == 2) {
                    sDt = xxx[0];
                    eDt = xxx[1];
                }
            }

            //daterange selector initialization
            $('input[name="selDate"]').daterangepicker({
                timePicker: true,
                timePickerIncrement: 60,
                timePicker24Hour: true,
                autoUpdateInput: true,
                startDate: sDt,
                endDate: eDt,
                ranges: {
                    'Today': [moment().startOf('day'), moment().endOf('day')],
                    'Yesterday': [moment().subtract(1, 'days').startOf('day'), moment().subtract(1, 'days').endOf('day')],
                    'Last 7 Days': [moment().subtract(6, 'days').startOf('day'), moment().endOf('day')],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                locale: {
                    format: 'M/DD/YYYY HH:00'
                }
            }
                , function (start, end, label) {
                    //callback, gets fired when date range is selected, setting values to viewmodel
                    $('#selDate').data('start', start.format('YYYY-MM-DD'));
                    $('#selDate').data('end', end.format('YYYY-MM-DD'));
            }
            );


            $('#chartContainer').on("shown.bs.collapse", function () {
                $("#chartContainer").height(400);
            });

            //initialize monitor dropdown on page load
            if ($('#selMon option').length == 0)
                fetchMonitors();


            //update monitor dropdown
            $('#selOrgID').change(function () {
                fetchMonitors();
            });

            //update monitor dropdown
            function fetchMonitors() {
                $('#selMon').empty();
                $.getJSON('@Url.Action("FetchMonitorsWithData")', { ID: $("#selOrgID").val() }, function (data) {
                    if (!data) {
                        return;
                    }
                    $('#selMon').append($('<option></option>').val('').text('Please select'));
                    $.each(data, function (index, item) {
                        $('#selMon').append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            };


            //hide chart if no data
            if (dataPointsA.length > 0) {
                chart = new CanvasJS.Chart("chartContainer", {
                    zoomEnabled: true,
                    animationEnabled: true,
                    exportEnabled: true,
                    title: {
                        text: parName
                    },
                    data: [{
                        type: "column",
                        connectNullData: true,
                        xValueType: "dateTime",
                        xValueFormatString: "MM/DD/YYYY HH:mm",
                        name: "line1",
                        dataPoints: dataPointsA
                    }],
                    rangeChanged: function (e) {

                        var x1 = moment(e.axisX[0].viewportMinimum).format('MM-DD-YYYY HH:mm');
                        var x2 = moment(e.axisX[0].viewportMaximum).format('MM-DD-YYYY HH:mm');

                        $('#gridData tbody tr').each(function (index, element) {
                            rowdt = $(this).attr('data-date');
                            rowdt = new Date(rowdt);
                            x1d = new Date(x1);
                            x2d = new Date(x2);
                            if (rowdt.getTime() < x1d.getTime() || rowdt.getTime() > x2d.getTime()) {
                                $(this).css('display', 'none');
                            }
                            else {
                                $(this).css('display', '');
                            }
                        });
                    }
                });

                chart.render();

                $("#chartContainer").show();
                $("#chartContainer").css("height", "320px");
            }
            else
                $("#chartContainer").hide();


        });

    </script>
}